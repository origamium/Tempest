{"version":3,"file":"main.1d134fddc4f2aca9da28.bundle.js","sources":["webpack:///./src/Common/Thumbnail/ThumbnailList.tsx"],"sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport Thumbnail from './Thumbnail';\n\nexport type ThumbnailListProps = {\n    /* unique account key*/\n    accountKey: string,\n\n    /* unique column key */\n    columnKey: string,\n\n    /* source id is content. */\n    sourceId?: string,\n\n    /* file or uri list */\n    lists: File[] | string[],\n\n    /* deletable? */\n    isDeletable?: boolean,\n\n    /* image clicked */\n    handleClick?: (Object) => void,\n\n    /* if isDeletable enabled, delete button onClick handler */\n    handleDelete?: (index) => void,\n};\n\nconst Styled = {\n    Root: styled.div`\n        display: flex;\n        flex-wrap: wrap;\n        margin: 0.2em;\n        height: 100%;\n        width: 100%;\n    `,\n};\n\nconst ExtractionUri = (source: any[]): string[] =>\n    source.map((v: any): string => {\n        if (typeof v === \"string\"){\n            return v;\n        } else if (v.preview) { // File\n            return v.preview.toString();\n        } else {\n            throw new Error();\n        }\n    });\n\nconst handleClick = (props: ThumbnailListProps, index: number) => (e: React.MouseEvent<HTMLImageElement>) => {\n    e.preventDefault();\n    const src = ExtractionUri(props.lists);\n    if(props.handleClick) {\n        props.handleClick({\n            account: props.accountKey,\n            columnId: props.columnKey,\n            src,\n            index\n        });\n    }\n};\n\nconst handleDelete = (props: ThumbnailListProps, index: number) => (e: React.MouseEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    if(props.handleDelete) {\n        props.handleDelete(index);\n    }\n};\n\nconst Thumbnails = (props: ThumbnailListProps): React.ReactNode => {\n    const lists: string[] = ExtractionUri(props.lists);\n    return lists.map((v, i) => (\n        <Thumbnail key={i} index={i} source={v}\n            handleClick={props.handleClick ? handleClick(props, i) : undefined}\n            handleDelete={props.isDeletable ? handleDelete(props, i) : undefined} />\n        )\n    )\n};\n\nexport const ThumbnailList: React.FunctionComponent<ThumbnailListProps> = React.memo((props: ThumbnailListProps) => (\n    <>\n        {props.lists ?\n            <Styled.Root>\n                {Thumbnails(props)}\n            </Styled.Root>:\n            <div />\n        }\n    </>\n));\n\nexport default ThumbnailList;\ntry {\n    // @ts-ignore\n    ThumbnailList.displayName = \"ThumbnailList\";\n    // @ts-ignore\n    ThumbnailList.__docgenInfo = { \"description\": \"\", \"displayName\": \"ThumbnailList\", \"props\": { \"accountKey\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"accountKey\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"columnKey\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"columnKey\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"sourceId\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"sourceId\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"lists\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"lists\", \"required\": true, \"type\": { \"name\": \"File[] | string[]\" } }, \"isDeletable\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"isDeletable\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"handleClick\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"handleClick\", \"required\": false, \"type\": { \"name\": \"(Object: any) => void\" } }, \"handleDelete\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"handleDelete\", \"required\": false, \"type\": { \"name\": \"(index: any) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/Common/Thumbnail/ThumbnailList.tsx#ThumbnailList\"] = { docgenInfo: ThumbnailList.__docgenInfo, name: \"ThumbnailList\", path: \"src/Common/Thumbnail/ThumbnailList.tsx#ThumbnailList\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":"AA2BA","sourceRoot":""}